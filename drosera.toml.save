ethereum_rpc = "https://ethereum-hoodi-rpc.publicnode.com"
drosera_rpc = "https://relay.hoodi.drosera.io"
eth_chain_id = 560048
drosera_address = "0x91cB447BaFc6e0EA0F4Fe056F5a9b1F14bb06e5D"

[traps]

[traps.hello_world]
path = "out/HelloWorldTrap.sol/HelloWorldTrap.json"
response_contract = "0x183D78491555cb69B68d2354F7373cc2632508C7"
response_function = "helloworld(string)"
cooldown_period_blocks = 33
min_number_of_operators = 1
max_number_of_operators = 2
block_sample_size = 10
private_trap = true
whitelist = []

# Uncomment this to deploy the TransferEventTrap

# [traps.transfer_event_trap]
# path = "out/TransferEventTrap.sol/TransferEventTrap.json"
# response_contract = "0x183D78491555cb69B68d2354F7373cc2632508C7"
# response_function = "helloworld(string)"
# cooldown_period_blocks = 33
# min_number_of_operators = 1
# max_number_of_operators = 2
# block_sample_size = 10
# private_trap = true
# whitelist = []
ethereum_rpc = "https://ethereum-hoodi-rpc.publicnode.com"
drosera_rpc = "https://relay.hoodi.drosera.io"
eth_chain_id = 560048
drosera_address = "0x91cB447BaFc6e0EA0F4Fe056F5a9b1F14bb06e5D"

[traps]

[traps.helloworld]
path = "out/HelloWorldTrap.sol/HelloWorldTrap.json"
response_contract = "0x183D78491555cb69B68d2354F7373cc2632508C7"
response_function = "helloworld(string)"
cooldown_period_blocks = 33
min_number_of_operators = 1
max_number_of_operators = 2
block_sample_size = 10
private_trap = true
whitelist = ["YOUR_OPERATOR_WALLET_ADDRESS"]

# New Users/Migrate:
# address = "DELETE THIS LINE WHEN APPLYING" (it will generate address after apply trap config)

# Existing Users:
# If you've deployed a trap with your wallet previously (Hoodi not Holesky), add your trap address here:
# address = "TRAP_ADDRESS"DROSERA_PRIVATE_KEY=your_eth_private_key_here drosera apply
sudo apt-get update && sudo apt-get upgrade -y
sudo apt install curl ufw iptables build-essential git wget lz4 jq make gcc nano automake autoconf tmux htop nvme-cli libgbm1 pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip libleveldb-dev -y

